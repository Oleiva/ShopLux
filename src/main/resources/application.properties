# Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
spring.datasource.type= com.mysql.jdbc.Driver

# JDBC url of the database.
spring.datasource.url=jdbc:mysql://localhost:3306/LuxoftTest?createDatabaseIfNotExist=true

spring.datasource.username=root
spring.datasource.password = Install_new!

entitymanager.packagesToScan: io.github.Oleiva.entity

#spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.ddl-auto = update


# LOGGING
logging.config= # Location of the logging configuration file. For instance `classpath:logback.xml` for Logback
logging.exception-conversion-word=%wEx # Conversion word used when logging exceptions.
logging.file= # Log file name. For instance `myapp.log`
logging.level.*= # Log levels severity mapping. For instance `logging.level.org.springframework=DEBUG`
logging.path= # Location of the log file. For instance `/var/log`
logging.pattern.console= # Appender pattern for output to the console. Only supported with the default logback setup.
logging.pattern.file= # Appender pattern for output to the file. Only supported with the default logback setup.
logging.pattern.level= # Appender pattern for log level (default %5p). Only supported with the default logback setup.
logging.register-shutdown-hook=false # Register a shutdown hook for the logging system when it is initialized.

# Email (MailProperties)
#spring.mail.default-encoding=UTF-8 # Default MimeMessage encoding.
#spring.mail.host= # SMTP server host. For instance `smtp.example.com`
#spring.mail.jndi-name= # Session JNDI name. When set, takes precedence to others mail settings.
#spring.mail.password= # Login password of the SMTP server.
#spring.mail.port= # SMTP server port.
#spring.mail.properties.*= # Additional JavaMail session properties.
#spring.mail.protocol=smtp # Protocol used by the SMTP server.
#spring.mail.test-connection=false # Test that the mail server is available on startup.
#spring.mail.username= # Login user of the SMTP server.



# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
#spring.data.jpa.repositories.enabled=true # Enable JPA repositories.
#spring.jpa.database= # Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database-platform= # Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.generate-ddl=false # Initialize the schema on startup.
#spring.jpa.hibernate.ddl-auto= # DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.naming-strategy= # Naming strategy fully qualified name.
#spring.jpa.open-in-view=true # Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.properties.*= # Additional native properties to set on the JPA provider.
#spring.jpa.show-sql=false # Enable logging of SQL statements.
